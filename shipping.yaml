- name: setup shipping server
  hosts: shipping
  become: yes
  tasks:
  - name: install maven
    ansible.builtin.package:
      name: "{{ item }}"
      state: present
    loop:
        - maven
        - mysql
  
  - name: Install  python package
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3.9
    loop:
      - PyMySQL
      - cryptography


  - name: Add the user roboshop
    ansible.builtin.user:
      name: roboshop
      comment: system user roboshop
      system: true
      shell: /sbin/nologin
      home: /app

  - name: Remove app directory
    ansible.builtin.file:
      path: /app
      state: absent    

  - name: Create app directory if it does not exist
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download shipping zip
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip
      dest: /tmp/shipping.zip

  - name: Extract shipping.zip
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    ansible.builtin.command: mvn clean package 
    args:
      chdir: /app


  - name: move jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar 
    args:
      chdir: /app

  - name: copy shipping service
    ansible.builtin.copy: 
      src: shipping.service
      dest: /etc/systemd/system/shipping.service 
   

  - name: import mysql data
    community.mysql.mysql_db:
      state: import
      name: all
      login_host: mysql.daws86s.icu
      login_user: root
      login_password: RoboShop@1
      target: "{{ item }}"
    loop: 
      - /app/db/schema.sql
      - /app/db/app-user.sql
      - /app/db/master-data.sql

  - name: daemon reload enable and start
    ansible.builtin.systemd_service:
      name: shipping
      enabled: true
      state: started
      daemon_reload: true